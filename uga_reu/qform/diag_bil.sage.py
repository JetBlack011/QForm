

# This file was *autogenerated* from the file diag_bil.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0)
D = matrix(QQ, [[_sage_const_3 ,_sage_const_2 ,_sage_const_3 ],[_sage_const_2 ,_sage_const_1 ,_sage_const_0 ],[_sage_const_3 ,_sage_const_0 ,_sage_const_2 ]])
A = copy(D)
T = matrix.identity(QQ, _sage_const_3 )

# for i in reversed(range(1, D.nrows())):
#     D[i-1,:] += D[i,:]
#     D[:,i-1] += D[:,i]
#     T[:,i-1] += T[:,i]

for i in range(D.nrows()):
    for j in range(i + _sage_const_1 , D.ncols()):
        a = D[j][i] / D[i][i]
        D[j,:] -= a * D[i,:]
        #T[j,:] -= a * T[i,:]
        D[:,j] -= a * D[:,i]
        T[:,j] -= a * T[:,i]

print(f'D =\n{D}\n')
print(f'T =\n{T}\n')

print(f'T^t * A * T\n{T.transpose() * A * T}')

